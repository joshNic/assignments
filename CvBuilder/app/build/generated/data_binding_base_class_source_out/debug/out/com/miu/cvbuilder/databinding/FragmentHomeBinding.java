// Generated by view binder compiler. Do not edit!
package com.miu.cvbuilder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.percentlayout.widget.PercentRelativeLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.miu.cvbuilder.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView careerNote;

  @NonNull
  public final PercentRelativeLayout rvLayout;

  @NonNull
  public final TextView tvCareerNote;

  @NonNull
  public final TextView tvCareerNoteHeading;

  @NonNull
  public final TextView tvWorkExperience;

  @NonNull
  public final TextView tvWorkExperienceHeading;

  @NonNull
  public final CardView workExperience;

  private FragmentHomeBinding(@NonNull LinearLayout rootView, @NonNull CardView careerNote,
      @NonNull PercentRelativeLayout rvLayout, @NonNull TextView tvCareerNote,
      @NonNull TextView tvCareerNoteHeading, @NonNull TextView tvWorkExperience,
      @NonNull TextView tvWorkExperienceHeading, @NonNull CardView workExperience) {
    this.rootView = rootView;
    this.careerNote = careerNote;
    this.rvLayout = rvLayout;
    this.tvCareerNote = tvCareerNote;
    this.tvCareerNoteHeading = tvCareerNoteHeading;
    this.tvWorkExperience = tvWorkExperience;
    this.tvWorkExperienceHeading = tvWorkExperienceHeading;
    this.workExperience = workExperience;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.careerNote;
      CardView careerNote = ViewBindings.findChildViewById(rootView, id);
      if (careerNote == null) {
        break missingId;
      }

      id = R.id.rvLayout;
      PercentRelativeLayout rvLayout = ViewBindings.findChildViewById(rootView, id);
      if (rvLayout == null) {
        break missingId;
      }

      id = R.id.tvCareerNote;
      TextView tvCareerNote = ViewBindings.findChildViewById(rootView, id);
      if (tvCareerNote == null) {
        break missingId;
      }

      id = R.id.tvCareerNoteHeading;
      TextView tvCareerNoteHeading = ViewBindings.findChildViewById(rootView, id);
      if (tvCareerNoteHeading == null) {
        break missingId;
      }

      id = R.id.tvWorkExperience;
      TextView tvWorkExperience = ViewBindings.findChildViewById(rootView, id);
      if (tvWorkExperience == null) {
        break missingId;
      }

      id = R.id.tvWorkExperienceHeading;
      TextView tvWorkExperienceHeading = ViewBindings.findChildViewById(rootView, id);
      if (tvWorkExperienceHeading == null) {
        break missingId;
      }

      id = R.id.workExperience;
      CardView workExperience = ViewBindings.findChildViewById(rootView, id);
      if (workExperience == null) {
        break missingId;
      }

      return new FragmentHomeBinding((LinearLayout) rootView, careerNote, rvLayout, tvCareerNote,
          tvCareerNoteHeading, tvWorkExperience, tvWorkExperienceHeading, workExperience);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
